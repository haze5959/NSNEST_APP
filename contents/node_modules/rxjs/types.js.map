{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";AAeA,2CAA2C;AAQ3C,0BAA0B;AAI1B,2BAA2B;AAE+B","sourcesContent":["import { Subscribable } from './Observable';\nimport { Subscription } from './Subscription';\n\nexport { UnaryFunction, OperatorFunction, FactoryOrValue, MonoTypeOperatorFunction } from './interfaces';\n\nexport interface Timestamp<T> {\n  value: T;\n  timestamp: number;\n}\n\nexport interface TimeInterval<T> {\n  value: T;\n  interval: number;\n}\n\n/** SUBSCRIPTION & OBSERVABLE INTERFACES */\n\nexport { AnonymousSubscription as Unsubscribable, TeardownLogic, ISubscription as SubscriptionLike } from './Subscription';\n\nexport { SubscribableOrPromise, ObservableInput } from './Observable';\n\nexport { Subscribable };\n\n/** OBSERVER INTERFACES */\n\nexport { NextObserver, ErrorObserver, CompletionObserver, PartialObserver, Observer } from './Observer';\n\n/** SCHEDULER INTERFACES */\n\nexport { IScheduler as SchedulerLike } from './Scheduler';\n\nexport interface SchedulerAction<T> extends Subscription {\n  schedule(state?: T, delay?: number): Subscription;\n}\n"]}