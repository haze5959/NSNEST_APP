{"remainingRequest":"/Users/ogkwon/Desktop/NSNEST/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ogkwon/Desktop/NSNEST/node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","dependencies":[{"path":"/Users/ogkwon/Desktop/NSNEST/node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","mtime":1513795823000},{"path":"/Users/ogkwon/Desktop/NSNEST/node_modules/cache-loader/dist/cjs.js","mtime":1529064651365},{"path":"/Users/ogkwon/Desktop/NSNEST/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoRefreshToken = function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        RefreshToken = _ref.RefreshToken;\n\n    _classCallCheck(this, CognitoRefreshToken);\n\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoRefreshToken.prototype.getToken = function getToken() {\n    return this.token;\n  };\n\n  return CognitoRefreshToken;\n}();\n\nexport default CognitoRefreshToken;",null]}